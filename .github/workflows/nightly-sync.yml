name: Nightly Sync and Beta Tag

on:
  schedule:
    # 每天晚上23:30运行 (UTC+8 = 15:30 UTC)
    - cron: '30 15 * * *'
  workflow_dispatch: # 允许手动触发

jobs:
  sync-and-tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: dev-compression
          fetch-depth: 0
          # 使用个人访问令牌进行检出，这样后续的推送操作也会使用此令牌
          token: ${{ secrets.PAT }}

      - name: Setup Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Configure merge strategy to ignore upstream workflows
        run: |
          git config merge.ours.driver true
          echo ".github/workflows/** merge=ours" > .gitattributes

      - name: Add upstream remote
        run: |
          # 假设原始仓库是 OpenListTeam/OpenList，请根据实际情况修改
          git remote add upstream https://github.com/OpenListTeam/OpenList.git

      - name: Fetch from upstream
        run: |
          git fetch upstream main

      - name: Merge upstream changes
        run: |
          git merge upstream/main --no-edit

      - name: Push changes to dev-compression
        run: |
          # 使用个人访问令牌推送更改
          git push origin dev-compression

      - name: Create beta tag with date
        run: |
          # 创建格式为 beta-YYYYMMDD 的标签
          BETA_TAG="beta-$(date +%Y%m%d)"

          # 检查标签是否已存在
          if git rev-parse "$BETA_TAG" >/dev/null 2>&1; then
            echo "标签 $BETA_TAG 已存在，删除旧标签"
            # 删除本地标签
            git tag -d "$BETA_TAG"
            # 删除远程标签
            git push --delete origin "$BETA_TAG" || echo "远程标签可能不存在，继续执行"
          fi

          # 创建新标签
          git tag "$BETA_TAG"
          # 使用个人访问令牌推送标签，这样可以触发其他工作流
          git push origin "$BETA_TAG"
          echo "Created and pushed tag: $BETA_TAG"
